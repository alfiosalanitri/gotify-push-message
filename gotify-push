#!/bin/bash
# A simple bash script for Linux to send a message to Gotify server from CLI
#
# written by Alfio Salanitri <www.alfiosalanitri.it> and are licensed under MIT license.

display_help() {
cat << EOF
Copyright (C) 2023 by Alfio Salanitri
Website: https://github.com/alfiosalanitri/gotify-push-nessage

USAGE: $(basename $0) [command options]

OPTIONS
-t value, --title value
    Set the notification title
    
-m value, --message value
    Set the notification message

-p value, --priority value
    Set the android notification priority
    0   = min
    1-3 = low
    4-7 = medium (default: 4)
    8-10= high

-c value, --contentType value
    Set the message content type: text or markdown

-l value, --link value
    Set the android action link opened on receive

-q, --quiet
    Do not output gotify response

-h, --help
    show this help
-------------
EOF
exit 0
}

# default options
title=""
message=""
priority=4
contentType="text"
clickUrl=''
link=""
quiet="no"
CONFIG_FILE="$HOME/.config/gotify-push"

if [ ! -f $CONFIG_FILE ]; then
  echo "[!] Config file: $CONFIG_FILE not found. Run ./install.sh before."
  exit 1
fi

TOKEN=$(awk -F'=' '/^token=/ { print $2}' $CONFIG_FILE)
URL=$(awk -F'=' '/^url=/ { print $2}' $CONFIG_FILE)

if [ "" == "$TOKEN" ]; then
  echo "[!] The Gotify app token is required."
  exit 1
fi
if [ "" == "$URL" ]; then
  echo "[!] The Gotify server url is required."
  exit 1
fi

# load options
while [ $# -gt 0 ] ; do
  case $1 in
    -h | --help) 
      display_help
      ;;
    -t | --title)
      title=$2 
      ;;
    -m | --message)
      message=$2 
      ;;
    -p | --priority)
      if [ "$2" -ge 1 ] && [ "$2" -le 10 ]; then
        priority=$2
      fi
      ;;
    -c | --contentType)
      if [ "$2" == "markdown" ]; then
        contentType=$2
      fi
      ;;
    -l | --link)
      link=$2 
      ;;
    -q | --quiet)
      quiet="yes"
      ;;
  esac
  shift
done

if [ "" == "$title" ]; then
  echo "[!] The title is required."
  exit 1
fi

if [ "" == "$message" ]; then
  echo "[!] The message is required."
  exit 1
fi
post_data='{"message": "'"$message"'", "priority": '$priority', "title": "'"$title"'", "extras": {"client::display": {"contentType": "text/'$contentType'"}}}'
if [ "" != "$link" ]; then
  post_data='{"message": "'"$message"'", "priority": '$priority', "title": "'"$title"'", "extras": {"client::notification": {"click": { "url":"'"$link"'" } }, "client::display": {"contentType": "text/'$contentType'"}}}'
fi
RESPONSE=$(curl -s -X POST "${URL}/message" -H "accept: application/json" -H "Content-Type: application/json" -H "Authorization: Bearer ${TOKEN}" -d "$post_data")
if [ "yes" == "$quiet" ]; then
  exit 0
fi
echo $RESPONSE
exit 0

